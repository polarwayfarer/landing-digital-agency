{"version":3,"file":"scripts/614.732cdb6d0c6e4f97cee3.js","mappings":"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","sources":["webpack://from-figma-digital-agency/./src/scripts/modules/common.js","webpack://from-figma-digital-agency/./src/scripts/modules/check-validity.js","webpack://from-figma-digital-agency/./src/scripts/modules/contact-form.js","webpack://from-figma-digital-agency/./src/scripts/modules/modal-window.js"],"sourcesContent":["export const isContainerOpened = elem => {\n  return !elem.classList.contains('display--none');\n};\n\nexport const setBodyOverflowY = isPermitted => {\n  document.body.style.overflowY =\n    (isPermitted) ? 'auto' : 'hidden';\n};\n\nexport const isMobileDevice = window.matchMedia('(pointer: coarse)').matches;\n\nexport const setElemShown = (elem, isPermitted) => {\n  if (isPermitted) {\n    elem.classList.remove('display--none');\n  } else {\n    elem.classList.add('display--none');\n  }\n  elem.setAttribute('aria-hidden', !isPermitted);\n}\n","/* Functions for form: checker and keyboard manager */\n\nexport const isValid = (inputTypeStr, inputValue) => {\n  let regExpPrecept;\n\n  switch(inputTypeStr) {\n    case 'name':\n      regExpPrecept = /(^[a-zA-Zа-яА-Я]([a-zA-Zа-яА-Я\\s\\'\\ʼ\\-\\.]{0,63})[a-zA-Zа-яА-Я]$)/;\n      break;\n    case 'email':\n      regExpPrecept = /^[a-zA-Z0-9]([\\w\\.\\-]{0,62})[a-zA-Z0-9]@[a-z0-9]([\\w\\.\\-]{1,62})\\.([a-z]{2,8})$/;\n      break;\n  }\n\n  return regExpPrecept.test(inputValue);\n};\n\nexport const manageKeydown = (inputTypeStr) => {\n  let regExpLetters;\n\n  switch(inputTypeStr) {\n    case 'name':\n      regExpLetters = /[a-zA-Zа-яА-Я\\s\\'\\ʼ\\-\\.]/;\n      break;\n    case 'email':\n      regExpLetters = /[\\w\\-\\.\\@]/;\n      break;\n  }\n\n  if (!event.key.match(regExpLetters)\n  && event.code !== 'ArrowRight' && event.code !== 'ArrowLeft'\n  && event.code !== 'Backspace' && event.code !== 'Delete')\n    event.preventDefault();\n};\n","import {isMobileDevice, setElemShown} from './common.js';\nimport {isValid, manageKeydown} from './check-validity.js';\n\n/* Control of Form inputs and submit */\n\nconst contactForm = document.forms.contactForm;\nconst contactName = contactForm.name;\nconst contactEmail = contactForm.email;\nconst contactMessage = contactForm.message;\nconst contactMessageLengthInfoP = document.querySelector('#contactMessageLengthInfoP');\n\nconst contactSubmitButton = contactForm.submit;\n\nexport const contactPrivacyCheckbox = contactForm.privacyAgreement;\nexport const contactFields = [contactName, contactEmail, contactMessage];\n\n// Common functions\n\nconst getErrorInfoElem = field => {\n  return field.parentElement.lastElementChild;\n}\n\n// Assign a counter for textarea 'Message'\n\nconst assignMessageLength = textField => {\n  contactMessageLengthInfoP.innerHTML = `Characters: ${textField.value.length} of ${textField.getAttribute('maxlength')}`;\n};\n\ncontactMessage.addEventListener('input', function() {\n  assignMessageLength(this);\n}, {passive: true});\nassignMessageLength(contactMessage);\n\n// Add hidden error blocks to every field\n\nconst addErrorInfoBlock = field => {\n  let pElem = document.createElement('p');\n  pElem.classList.add('partition-container__p-item', 'p-item', 'p-item--error');\n  setElemShown(pElem, false);\n\n  if (field.getAttribute('type') === 'checkbox') pElem.classList.add('p-item--error-checkbox');\n\n  pElem.id = `${field.id}ErrorInfo`;\n\n  field.parentElement.append(pElem);\n};\n\n(function() {\n  contactFields.forEach(field => addErrorInfoBlock(field));\n  addErrorInfoBlock(contactPrivacyCheckbox);\n})();\n\n// Functions: assign an error to a field and reset all error fields\n\nconst assignErrorMessage = (field, errorStatus) => {\n  let errorInfoElem = getErrorInfoElem(field);\n  let errorText = '';\n\n  switch (errorStatus) {\n    case 'empty':\n      errorText = 'Field can\\'t be empty';\n      break;\n    case 'not-valid--name':\n      errorText = `Name field isn\\'t valid.<br />E.g.: Mr. d'Artagnan Doe-Louis`;\n      break;\n    case 'not-valid--email':\n      errorText = `Email field isn\\'t valid.<br />E.g.: my.company-123@mail.com`;\n      break;\n    case 'not-enough--name':\n    case 'not-enough--email':\n      errorText = `Field shouldn\\`t be less than 2 characters`;\n      break;\n    case 'not-enough--text':\n      errorText = 'Field shouldn\\`t be less than 50 characters';\n      break;\n    case 'too-much--text':\n      errorText = 'Field shouldn\\`t be more than 500 characters';\n      break;\n    case 'unchecked':\n      errorText = 'Field should be checked. Read the Agreement before confirmation';\n      break;\n  }\n\n  errorInfoElem.innerHTML = errorText;\n  setElemShown(errorInfoElem, true);\n\n  field.setAttribute('aria-describedby', `${errorInfoElem.id}ErrorInfo`);\n  field.classList.add('input--error');\n};\n\nexport const resetFieldErrors = field => {\n  if (field.classList.contains('input--error')) {\n    let errorInfoElem = getErrorInfoElem(field);\n    setElemShown(errorInfoElem, false);\n\n    field.classList.remove('input--error');\n    field.removeAttribute('aria-describedby');\n\n    if (field.classList.contains('p-item--privacy')) field.setAttribute('aria-describedby', `${field.id}Info`);\n  }\n};\n\n// Function expressions to check fields of needed types\n\nconst checkEmptyInput = field => {\n  if (field.value.length === 0) assignErrorMessage(field, 'empty');\n};\n\nconst checkField = (field, type) => {\n  field.value = field.value.trim();\n\n  if (type !== 'text' && field.value.length === 1\n  || type === 'text' && field.value.length !== 0 && field.value.length < 50) {\n    assignErrorMessage(field, `not-enough--${type}`);\n  } else if (type === 'text' && field.value.length > 1000) {\n    assignErrorMessage(field, 'too-much--text');\n  } else if (type !== 'text' && field.value.length !== 0 && !isValid(type, field.value)) {\n    assignErrorMessage(field, `not-valid--${type}`);\n  }\n};\n\nconst checkCheckbox = field => {\n  if (!field.checked) assignErrorMessage(field, 'unchecked');\n};\n\n// Assign functions to check fields\n\n(function() {\n  contactFields.forEach(field => {\n    field.addEventListener('input', function() {\n      resetFieldErrors(field);\n    }, {passive: true});\n  });\n  contactPrivacyCheckbox.addEventListener('change', function() {\n    resetFieldErrors(this);\n  }, {passive: true});\n\n  contactName.addEventListener('blur', function() {\n    checkField(contactName, 'name');\n  }, {passive: true});\n  contactEmail.addEventListener('blur', function() {\n    checkField(contactEmail, 'email');\n  }, {passive: true});\n  contactMessage.addEventListener('blur', function() {\n    checkField(contactMessage, 'text');\n  }, {passive: true});\n})();\n\n// Check all fields before submitting and assign a mailto action to the form\n\nconst checkAllContactFields = () => {\n  contactFields.forEach(field => checkEmptyInput(field));\n\n  checkCheckbox(contactPrivacyCheckbox);\n  checkField(contactName, 'name');\n  checkField(contactEmail, 'email');\n  checkField(contactMessage, 'text');\n\n  for (let i = 0; i < contactFields.length; i++) {\n    if (contactFields[i].classList.contains('input--error')) {\n      if (!isMobileDevice) contactFields[i].focus();\n\n      event.preventDefault();\n      return;\n    }\n  }\n\n  if (!contactPrivacyCheckbox.checked) {\n    if (!isMobileDevice) contactPrivacyCheckbox.focus();\n    event.preventDefault();\n  }\n};\n\n(function() {\n  contactForm.addEventListener('submit', checkAllContactFields, {passive: false});\n})();\n\n// Manage keydown for name and email input fields\n\n(function() {\n  contactName.addEventListener('keydown', function() {\n    manageKeydown('name');\n  }, {passive: false});\n  contactEmail.addEventListener('keydown', function() {\n    manageKeydown('email');\n  }, {passive: false});\n})();\n\n// Add style to focused checkbox container\n\nconst checkboxInputs = document.querySelectorAll('.checkbox-input');\n\ncheckboxInputs.forEach(input => {\n  let checkboxContainer = input.parentElement;\n\n  input.addEventListener('focus', function() {\n    checkboxContainer.classList.add('checkbox-container--focused');\n  }, {passive: true});\n  input.addEventListener('blur', function() {\n    checkboxContainer.classList.remove('checkbox-container--focused');\n  }, {passive: true});\n});\n","import {isContainerOpened, setBodyOverflowY, setElemShown} from './common.js';\nimport {contactFields, contactPrivacyCheckbox, resetFieldErrors} from './contact-form.js';\n\n/* Control of modal window occurrence */\n\nconst contactButtons = document.querySelectorAll('.contact-button');\nconst modalContainer = document.querySelector('.body-container__modal-container');\nconst modalWindow = document.querySelector('.modal-container__modal-window');\nconst modalBackExitButton = document.querySelector('.modal-container__back-close-button');\nconst modalSvgExitButton = document.querySelector('.modal-window__svg-button');\nconst modalExitButtons = [modalBackExitButton, modalSvgExitButton];\n\n\nconst footerLinkElems = document.querySelectorAll('.footer-container__links-container .li-item__link');\nconst lastFooterLinkElem = footerLinkElems[footerLinkElems.length - 1];\n\nconst bodyChildrenArr = document.body.children;\n\n// Common vars\n\nlet activeBeforeModalOpenedElem;\n\n// Common functions\n\nconst setBodyAriaHidden = isPermitted => {\n  for (let i = 0; i < bodyChildrenArr.length - 1; i++) {\n    bodyChildrenArr[i].setAttribute('aria-hidden', isPermitted);\n  }\n};\n\nconst setAriaToOpenModalButton = (button, isItsModalOpened) => {\n  button.setAttribute('aria-pressed', isItsModalOpened);\n  button.setAttribute('aria-expanded', isItsModalOpened);\n};\n\nconst closeModalWindow = () => {\n  setElemShown(modalContainer, false);\n  setBodyAriaHidden(false);\n  setBodyOverflowY(true);\n\n  contactFields.forEach(field => resetFieldErrors(field));\n  resetFieldErrors(contactPrivacyCheckbox);\n\n  setAriaToOpenModalButton(activeBeforeModalOpenedElem, false);\n  activeBeforeModalOpenedElem.focus();\n  activeBeforeModalOpenedElem = null;\n};\n\n// Add events to modal interactive elements\n\n(function() {\n  contactButtons.forEach(button => {\n    button.addEventListener('click', function() {\n      setBodyOverflowY(false);\n      setElemShown(modalContainer, true);\n      setBodyAriaHidden(true);\n\n      activeBeforeModalOpenedElem = document.activeElement;\n      setAriaToOpenModalButton(activeBeforeModalOpenedElem, true);\n\n      setTimeout(() => {\n        modalWindow.focus();\n      }, 300);\n\n    }, {passive: true});\n  });\n\n  modalExitButtons.forEach(button => {\n    button.addEventListener('click', function() {\n      closeModalWindow();\n    }, {passive: true});\n  });\n\n  // To prevent focus on main body interactive elems if modal is opened\n  lastFooterLinkElem.addEventListener('focus', function() {\n    if (!isContainerOpened(modalContainer)) return;\n\n    event.preventDefault();\n    modalWindow.focus();\n\n  }, {passive: false, capture: true});\n\n})();\n\n// A workaround for the case:\n// While resizing with opened modal window, overflowY of the body sometimes returns to 'auto', when it's not necessary.\n\nwindow.addEventListener('resize', function() {\n  if (!isContainerOpened(modalContainer)) return;\n\n  if (document.body.style.overflowY === 'auto') setBodyOverflowY(false);\n}, {passive: true});\n"],"names":["isContainerOpened","elem","classList","contains","setBodyOverflowY","isPermitted","document","body","style","overflowY","isMobileDevice","window","matchMedia","matches","setElemShown","remove","add","setAttribute","manageKeydown","inputTypeStr","regExpLetters","event","key","match","code","preventDefault","contactForm","forms","contactName","name","contactEmail","email","contactMessage","message","contactMessageLengthInfoP","querySelector","contactPrivacyCheckbox","submit","privacyAgreement","contactFields","getErrorInfoElem","field","parentElement","lastElementChild","assignMessageLength","textField","innerHTML","value","length","getAttribute","addEventListener","this","passive","addErrorInfoBlock","pElem","createElement","id","append","forEach","assignErrorMessage","errorStatus","errorInfoElem","errorText","resetFieldErrors","removeAttribute","checkField","type","trim","inputValue","regExpPrecept","test","isValid","checkAllContactFields","checkEmptyInput","checked","i","focus","querySelectorAll","input","checkboxContainer","activeBeforeModalOpenedElem","contactButtons","modalContainer","modalWindow","modalExitButtons","footerLinkElems","lastFooterLinkElem","bodyChildrenArr","children","setBodyAriaHidden","setAriaToOpenModalButton","button","isItsModalOpened","activeElement","setTimeout","capture"],"sourceRoot":""}