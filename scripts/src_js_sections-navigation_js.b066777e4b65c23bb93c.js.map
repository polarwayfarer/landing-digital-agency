{"version":3,"file":"scripts/src_js_sections-navigation_js.b066777e4b65c23bb93c.js","mappings":";;;;;;;;;AAAa;;AAEb,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAAC,QAAQ;EAAA,OAAIA,QAAQ,CAACC,YAAT,CAAsB,MAAtB,EAA8BC,OAA9B,CAAsC,GAAtC,EAA2C,EAA3C,CAAJ;AAAA,CAAtB,EAEA;;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,QAAQ,EAAI;EACtCA,QAAQ,CAACC,OAAT,CAAiB,UAAAC,IAAI,EAAI;IACvBA,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAACC,KAAD,EAAW;MACxCA,KAAK,CAACC,cAAN;MACA,IAAIC,aAAa,GAAGX,KAAK,CAACS,KAAK,CAACG,aAAP,CAAzB;MAEAC,MAAM,CAACC,QAAP,CAAgB;QACdC,GAAG,EAAEC,QAAQ,CAACC,cAAT,CAAwBN,aAAxB,EAAuCO,SAAvC,GAAmD,EAD1C;QAEdC,QAAQ,EAAE;MAFI,CAAhB;IAID,CARD;EASD,CAVD;AAWD,CAZD;;AAcA,IAAIC,cAAc,GAAGJ,QAAQ,CAACK,gBAAT,CAA0B,oCAA1B,CAArB;AACA,IAAIC,QAAQ,GAAGN,QAAQ,CAACK,gBAAT,CAA0B,WAA1B,CAAf;AAEAjB,mBAAmB,CAACgB,cAAD,CAAnB;AACAhB,mBAAmB,CAACkB,QAAD,CAAnB,EAEA;;AAEA,IAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAAAC,OAAO,EAAI;EACnDA,OAAO,CAACnB,OAAR,CAAgB,UAAAoB,KAAK,EAAI;IACvB,IAAIA,KAAK,CAACC,cAAV,EAA0B;MACxBP,cAAc,CAACd,OAAf,CAAwB,UAAAC,IAAI,EAAI;QAC9BA,IAAI,CAACqB,SAAL,CAAeC,MAAf,CAAsB,kBAAtB,EAA0C7B,KAAK,CAACO,IAAD,CAAL,KAAgBmB,KAAK,CAACI,MAAN,CAAaC,EAAvE;MACD,CAFD;IAGD;EACF,CAND;AAOD,CARgB,EAQd;EAACC,SAAS,EAAE;AAAZ,CARc,CAAjB;AAUA,IAAIC,gBAAgB,GAAGjB,QAAQ,CAACK,gBAAT,CAA0B,oBAA1B,CAAvB;AAEAY,gBAAgB,CAAC3B,OAAjB,CAAyB,UAAA4B,OAAO;EAAA,OAAIX,QAAQ,CAACY,OAAT,CAAiBD,OAAjB,CAAJ;AAAA,CAAhC","sources":["webpack://from-figma-digital-agency/./src/js/sections-navigation.js"],"sourcesContent":["'use strict';\n\nconst getId = linkElem => linkElem.getAttribute('href').replace('#', '');\n\n// Control of smooth navigation for navigation elements\n\nconst addSmoothNavigation = linksArr => {\n  linksArr.forEach(link => {\n    link.addEventListener('click', (event) => {\n      event.preventDefault();\n      let currentLinkId = getId(event.currentTarget);\n\n      window.scrollTo({\n        top: document.getElementById(currentLinkId).offsetTop - 50,\n        behavior: 'smooth'\n      });\n    });\n  });\n}\n\nlet headerNavLinks = document.querySelectorAll('.header-container__nav-container a');\nlet svgLinks = document.querySelectorAll('.svg-link');\n\naddSmoothNavigation(headerNavLinks);\naddSmoothNavigation(svgLinks);\n\n// Control of responsive behaviour for header's navigation links\n\nconst observer = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      headerNavLinks.forEach (link => {\n        link.classList.toggle('link--active-tab', getId(link) === entry.target.id);\n      });\n    }\n  });\n}, {threshold: 0.5});\n\nlet observedSections = document.querySelectorAll('.section--observed');\n\nobservedSections.forEach(section => observer.observe(section));\n"],"names":["getId","linkElem","getAttribute","replace","addSmoothNavigation","linksArr","forEach","link","addEventListener","event","preventDefault","currentLinkId","currentTarget","window","scrollTo","top","document","getElementById","offsetTop","behavior","headerNavLinks","querySelectorAll","svgLinks","observer","IntersectionObserver","entries","entry","isIntersecting","classList","toggle","target","id","threshold","observedSections","section","observe"],"sourceRoot":""}