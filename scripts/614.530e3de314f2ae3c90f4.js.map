{"version":3,"file":"scripts/614.530e3de314f2ae3c90f4.js","mappings":"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","sources":["webpack://from-figma-digital-agency/./src/scripts/modules/common.js","webpack://from-figma-digital-agency/./src/scripts/modules/check-validity.js","webpack://from-figma-digital-agency/./src/scripts/modules/contact-form.js","webpack://from-figma-digital-agency/./src/scripts/modules/modal-window.js"],"sourcesContent":["'use strict';\n\n// Common functions\n\nexport const isContainerOpened = elem => {\n  return !elem.classList.contains('display--none');\n};\n\nexport const setBodyOverflowY = isPermitted => {\n  document.body.style.overflowY =\n    (isPermitted) ? 'auto' : 'hidden';\n};\n\nexport const isMobileDevice = window.matchMedia('(pointer: coarse)').matches;\n","'use strict';\n\nexport const isValid = (inputTypeStr, inputValue) => {\n  let regExpPrecept;\n\n  switch(inputTypeStr) {\n    case 'name':\n      regExpPrecept = /(^[a-zA-Zа-яА-Я]([a-zA-Zа-яА-Я\\s\\'\\ʼ\\-\\.]{0,63})[a-zA-Zа-яА-Я]$)/;\n      break;\n    case 'email':\n      regExpPrecept = /^[a-zA-Z0-9]([\\w\\.\\-]{0,62})[a-zA-Z0-9]@[a-z0-9]([\\w\\.\\-]{1,62})\\.([a-z]{2,8})$/;\n      break;\n  }\n\n  return regExpPrecept.test(inputValue);\n};\n\nexport const manageKeydown = (inputTypeStr) => {\n  let regExpLetters;\n\n  switch(inputTypeStr) {\n    case 'name':\n      regExpLetters = /[a-zA-Zа-яА-Я\\s\\'\\ʼ\\-\\.]/;\n      break;\n    case 'email':\n      regExpLetters = /[\\w\\-\\.\\@]/;\n      break;\n  }\n\n  if (!event.key.match(regExpLetters)\n  && event.code !== 'ArrowRight' && event.code !== 'ArrowLeft'\n  && event.code !== 'Backspace' && event.code !== 'Delete')\n    event.preventDefault();\n};\n","import {isContainerOpened, isMobileDevice} from './common.js';\nimport {isValid, manageKeydown} from './check-validity.js';\n\n'use strict';\n\n// Control of Form inputs and submit\n\nlet contactForm = document.forms.contactForm;\nlet contactName = contactForm.name;\nlet contactEmail = contactForm.email;\nlet contactMessage = contactForm.message;\nlet contactSubmitButton = contactForm.submit;\nlet contactMessageInfo = document.querySelector('#contactMessageInfo');\n\nexport const contactPrivacyAgreement = contactForm.privacyAgreement;\nexport const contactFields = [contactName, contactEmail, contactMessage];\n\n// Assign a counter for textarea 'Message'\n\nconst assignMessageLength = textField => {\n  contactMessageInfo.innerHTML = `Characters: ${textField.value.length} of ${textField.getAttribute('maxlength')}`;\n};\n\ncontactMessage.addEventListener('input', function() {\n  assignMessageLength(this);\n}, {passive: true});\nassignMessageLength(contactMessage);\n\n// Add hidden error blocks to every field\n\nconst addErrorInfoBlock = field => {\n  let pElem = document.createElement('p');\n  pElem.classList.add('partition__error-info', 'error-info', 'display--none');\n  if (field.getAttribute('type') === 'checkbox') pElem.classList.add('error-info--checkbox');\n  pElem.id = `${field.id}ErrorInfo`;\n  pElem.setAttribute('tabindex', '-1');\n\n  field.parentElement.append(pElem);\n};\n\n(function() {\n  contactFields.forEach(field => addErrorInfoBlock(field));\n  addErrorInfoBlock(contactPrivacyAgreement);\n})();\n\n// Functions: assign an error to a field and reset all error fields\n\nconst assignErrorMessage = (field, errorStatus) => {\n  let pElem = field.parentElement.lastElementChild;\n  let errorText = '';\n\n  switch (errorStatus) {\n    case 'empty':\n      errorText = 'Field can\\'t be empty';\n      break;\n    case 'not-valid--name':\n      errorText = `Name field isn\\'t valid.<br />E.g.: Mr. d'Artagnan Doe-Louis`;\n      break;\n    case 'not-valid--email':\n      errorText = `Email field isn\\'t valid.<br />E.g.: my.company-123@mail.com`;\n      break;\n    case 'not-enough--name':\n    case 'not-enough--email':\n      errorText = `Field shouldn\\`t be less than 2 characters`;\n      break;\n    case 'not-enough--text':\n      errorText = 'Field shouldn\\`t be less than 50 characters';\n      break;\n    case 'too-much--text':\n      errorText = 'Field shouldn\\`t be more than 500 characters';\n      break;\n    case 'unchecked':\n      errorText = 'Field should be checked. Read the Agreement before confirmation';\n      break;\n  }\n\n  pElem.innerHTML = errorText;\n  pElem.classList.remove('display--none');\n\n  field.setAttribute('aria-labelledby', `${field.id}Label ${pElem.id}`);\n  field.classList.add('field--error');\n};\n\nexport const resetFieldErrors = field => {\n  if (field.classList.contains('field--error')) {\n    let errorInfoElem;\n\n    errorInfoElem = field.parentElement.lastElementChild;\n    errorInfoElem.classList.add('display--none');\n\n    field.classList.remove('field--error');\n    field.setAttribute('aria-labelledby', `${field.id}Label`);\n  }\n};\n\n// Function expressions to check fields of needed types\n\nconst checkEmptyInput = field => {\n  if (field.value.length === 0) assignErrorMessage(field, 'empty');\n};\n\nconst checkField = (field, type) => {\n  field.value = field.value.trim();\n\n  if (type !== 'text' && field.value.length === 1\n  || type === 'text' && field.value.length !== 0 && field.value.length < 50) {\n    assignErrorMessage(field, `not-enough--${type}`);\n  } else if (type === 'text' && field.value.length > 1000) {\n    assignErrorMessage(field, 'too-much--text');\n  } else if (type !== 'text' && field.value.length !== 0 && !isValid(type, field.value)) {\n    assignErrorMessage(field, `not-valid--${type}`);\n  }\n};\n\nconst checkCheckbox = field => {\n  if (!field.checked) assignErrorMessage(field, 'unchecked');\n};\n\n// Assign functions to check fields\n\ncontactFields.forEach(field => {\n  field.addEventListener('input', function() {resetFieldErrors(field)}, {passive: true});\n});\ncontactPrivacyAgreement.addEventListener('change', function() {resetFieldErrors(this)}, {passive: true});\n\ncontactName.addEventListener('blur', function() {\n  checkField(contactName, 'name');\n}, {passive: true});\ncontactEmail.addEventListener('blur', function() {\n  checkField(contactEmail, 'email');\n}, {passive: true});\ncontactMessage.addEventListener('blur', function() {\n  checkField(contactMessage, 'text');\n}, {passive: true});\n\n// Check all fields before submitting and assign a mailto action to the form\n\nconst checkAllContactFields = () => {\n  contactFields.forEach(field => checkEmptyInput(field));\n\n  checkCheckbox(contactPrivacyAgreement);\n  checkField(contactName, 'name');\n  checkField(contactEmail, 'email');\n  checkField(contactMessage, 'text');\n\n  for (let i = 0; i < contactFields.length; i++) {\n    if (contactFields[i].classList.contains('field--error')) {\n      if (!isMobileDevice) contactFields[i].focus();\n\n      event.preventDefault();\n      return;\n    }\n  }\n\n  if (!contactPrivacyAgreement.checked) {\n    if (!isMobileDevice) contactPrivacyAgreement.focus();\n    event.preventDefault();\n  }\n};\n\ncontactForm.addEventListener('submit', checkAllContactFields, {passive: false});\n\n// Manage keydown for name and email input fields\n\ncontactName.addEventListener('keydown', function() {\n  manageKeydown('name');\n}, {passive: false});\ncontactEmail.addEventListener('keydown', function() {\n  manageKeydown('email');\n}, {passive: false});\n\n// Add style to focused checkbox container\n\nlet checkboxInputs = document.querySelectorAll('.checkbox-input');\n\ncheckboxInputs.forEach(input => {\n  let checkboxContainer = input.parentElement;\n\n  input.addEventListener('focus', function() {\n    checkboxContainer.classList.add('checkbox-container--focused');\n  }, {passive: true});\n  input.addEventListener('blur', function() {\n    checkboxContainer.classList.remove('checkbox-container--focused');\n  }, {passive: true});\n});\n","import {isContainerOpened, setBodyOverflowY} from './common.js';\nimport {contactFields, contactPrivacyAgreement, resetFieldErrors} from './contact-form.js';\n\n'use strict';\n\n/* Control of modal window occurrence */\n\nlet contactButtons = document.querySelectorAll('.contact-button');\nlet modalContainer = document.querySelector('.body-container__modal-container');\nlet modalWindow = document.querySelector('.modal-container__modal-window');\nlet modalBackExitButton = document.querySelector('.modal-container__back-close-button');\nlet modalSvgExitButton = document.querySelector('.modal-window__svg-button');\n\ncontactButtons.forEach(button => {\n  button.addEventListener('click', function() {\n    modalContainer.classList.remove('display--none');\n    setBodyOverflowY(false);\n\n    modalSvgExitButton.focus();\n  }, {passive: true});\n});\n\nconst closeModalWindow = () => {\n  modalContainer.classList.add('display--none');\n  setBodyOverflowY(true);\n  contactFields.forEach(field => resetFieldErrors(field));\n  resetFieldErrors(contactPrivacyAgreement);\n};\n\n[modalBackExitButton, modalSvgExitButton].forEach(button => {\n  button.addEventListener('click', closeModalWindow, {passive: true});\n});\n\n// A workaround for the case:\n// While resizing with opened modal window, overflowY of the body sometimes returns to 'auto', when it's not necessary.\nwindow.addEventListener('resize', function() {\n  if (!isContainerOpened(modalContainer)) return;\n\n  if (document.body.style.overflowY === 'auto') setBodyOverflowY(false);\n}, {passive: true});\n"],"names":["isContainerOpened","elem","classList","contains","setBodyOverflowY","isPermitted","document","body","style","overflowY","isMobileDevice","window","matchMedia","matches","manageKeydown","inputTypeStr","regExpLetters","event","key","match","code","preventDefault","contactForm","forms","contactName","name","contactEmail","email","contactMessage","message","contactMessageInfo","submit","querySelector","contactPrivacyAgreement","privacyAgreement","contactFields","assignMessageLength","textField","innerHTML","value","length","getAttribute","addEventListener","this","passive","addErrorInfoBlock","field","pElem","createElement","add","id","setAttribute","parentElement","append","forEach","assignErrorMessage","errorStatus","lastElementChild","errorText","remove","resetFieldErrors","checkField","type","trim","inputValue","regExpPrecept","test","isValid","checkEmptyInput","checked","i","focus","querySelectorAll","input","checkboxContainer","contactButtons","modalContainer","modalBackExitButton","modalSvgExitButton","button","closeModalWindow"],"sourceRoot":""}