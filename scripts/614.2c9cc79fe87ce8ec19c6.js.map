{"version":3,"file":"scripts/614.2c9cc79fe87ce8ec19c6.js","mappings":"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","sources":["webpack://landing-digital-agency/./src/scripts/modules/common.js","webpack://landing-digital-agency/./src/scripts/modules/check-validity.js","webpack://landing-digital-agency/./src/scripts/modules/contact-form.js","webpack://landing-digital-agency/./src/scripts/modules/modal-window.js"],"sourcesContent":["export const isContainerOpened = elem => {\n  return !elem.classList.contains('display--none');\n};\n\nexport const setBodyOverflowY = isPermitted => {\n  document.body.style.overflowY =\n    (isPermitted) ? 'auto' : 'hidden';\n};\n\nexport const isMobileDevice = window.matchMedia('(pointer: coarse)').matches;\n\nexport const setElemShown = (elem, isPermitted) => {\n  if (isPermitted) {\n    elem.classList.remove('display--none');\n  } else {\n    elem.classList.add('display--none');\n  }\n  elem.setAttribute('aria-hidden', !isPermitted);\n}\n","/* Functions for form: checker and keyboard manager */\n\nexport const isValid = (inputTypeStr, inputValue) => {\n  let regExpPrecept;\n\n  switch(inputTypeStr) {\n    case 'name':\n      regExpPrecept = /(^[a-zA-Zа-яА-Я]([a-zA-Zа-яА-Я\\s\\'\\ʼ\\-\\.]{0,63})[a-zA-Zа-яА-Я]$)/;\n      break;\n    case 'email':\n      regExpPrecept = /^[a-zA-Z0-9]([\\w\\.\\-]{0,62})[a-zA-Z0-9]@[a-z0-9]([\\w\\.\\-]{1,62})\\.([a-z]{2,8})$/;\n      break;\n  }\n\n  return regExpPrecept.test(inputValue);\n};\n\nexport const manageKeydown = (inputTypeStr) => {\n  let regExpLetters;\n\n  switch(inputTypeStr) {\n    case 'name':\n      regExpLetters = /[a-zA-Zа-яА-Я\\s\\'\\ʼ\\-\\.]/;\n      break;\n    case 'email':\n      regExpLetters = /[\\w\\-\\.\\@]/;\n      break;\n  }\n\n  if (!event.key.match(regExpLetters)\n  && event.code !== 'ArrowRight' && event.code !== 'ArrowLeft'\n  && event.code !== 'Backspace' && event.code !== 'Delete')\n    event.preventDefault();\n};\n","import {isMobileDevice, setElemShown} from './common.js';\nimport {isValid, manageKeydown} from './check-validity.js';\n\n/* Control of Form inputs and submit */\n\nconst contactForm = document.forms.contactForm;\nconst contactName = contactForm.name;\nconst contactEmail = contactForm.email;\nconst contactMessage = contactForm.message;\nconst contactMessageLengthInfoP = document.querySelector('#contactMessageLengthInfoP');\n\nconst contactSubmitButton = contactForm.submit;\n\nexport const contactPrivacyCheckbox = contactForm.privacyAgreement;\nexport const contactFields = [contactName, contactEmail, contactMessage];\n\n// Common functions\n\nconst getErrorInfoElem = field => {\n  return field.parentElement.lastElementChild;\n}\n\n// Assign a counter for textarea 'Message'\n\nconst assignMessageLength = textField => {\n  contactMessageLengthInfoP.innerHTML = `Characters: ${textField.value.length} of ${textField.getAttribute('maxlength')}`;\n};\n\ncontactMessage.addEventListener('input', function() {\n  assignMessageLength(this);\n}, {passive: true});\nassignMessageLength(contactMessage);\n\n// Add hidden error blocks to every field\n\nconst addErrorInfoBlock = field => {\n  let pElem = document.createElement('p');\n  pElem.classList.add('partition-container__p-item', 'p-item', 'p-item--error');\n  setElemShown(pElem, false);\n\n  if (field.getAttribute('type') === 'checkbox') pElem.classList.add('p-item--error-checkbox');\n\n  pElem.id = `${field.id}ErrorInfo`;\n\n  field.parentElement.append(pElem);\n};\n\n(function() {\n  contactFields.forEach(field => addErrorInfoBlock(field));\n  addErrorInfoBlock(contactPrivacyCheckbox);\n})();\n\n// Functions: assign an error to a field and reset all error fields\n\nconst assignErrorMessage = (field, errorStatus) => {\n  let errorInfoElem = getErrorInfoElem(field);\n  let errorText = '';\n\n  switch (errorStatus) {\n    case 'empty':\n      errorText = 'Field can\\'t be empty';\n      break;\n    case 'not-valid--name':\n      errorText = `Name field isn\\'t valid.<br />E.g.: Mr. d'Artagnan Doe-Louis`;\n      break;\n    case 'not-valid--email':\n      errorText = `Email field isn\\'t valid.<br />E.g.: my.company-123@mail.com`;\n      break;\n    case 'not-enough--name':\n    case 'not-enough--email':\n      errorText = `Field shouldn\\`t be less than 2 characters`;\n      break;\n    case 'not-enough--text':\n      errorText = 'Field shouldn\\`t be less than 50 characters';\n      break;\n    case 'too-much--text':\n      errorText = 'Field shouldn\\`t be more than 500 characters';\n      break;\n    case 'unchecked':\n      errorText = 'Field should be checked. Read the Agreement before confirmation';\n      break;\n  }\n\n  errorInfoElem.innerHTML = errorText;\n  setElemShown(errorInfoElem, true);\n\n  field.setAttribute('aria-describedby', `${errorInfoElem.id}ErrorInfo`);\n  field.classList.add('input--error');\n};\n\nexport const resetFieldErrors = field => {\n  if (field.classList.contains('input--error')) {\n    let errorInfoElem = getErrorInfoElem(field);\n    setElemShown(errorInfoElem, false);\n\n    field.classList.remove('input--error');\n    field.removeAttribute('aria-describedby');\n\n    if (field.classList.contains('p-item--privacy')) field.setAttribute('aria-describedby', `${field.id}Info`);\n  }\n};\n\n// Function expressions to check fields of needed types\n\nconst checkEmptyInput = field => {\n  if (field.value.length === 0) assignErrorMessage(field, 'empty');\n};\n\nconst checkField = (field, type) => {\n  field.value = field.value.trim();\n\n  if (type !== 'text' && field.value.length === 1\n  || type === 'text' && field.value.length !== 0 && field.value.length < 50) {\n    assignErrorMessage(field, `not-enough--${type}`);\n  } else if (type === 'text' && field.value.length > 1000) {\n    assignErrorMessage(field, 'too-much--text');\n  } else if (type !== 'text' && field.value.length !== 0 && !isValid(type, field.value)) {\n    assignErrorMessage(field, `not-valid--${type}`);\n  }\n};\n\nconst checkCheckbox = field => {\n  if (!field.checked) assignErrorMessage(field, 'unchecked');\n};\n\n// Assign functions to check fields\n\n(function() {\n  contactFields.forEach(field => {\n    field.addEventListener('input', function() {\n      resetFieldErrors(field);\n    }, {passive: true});\n  });\n  contactPrivacyCheckbox.addEventListener('change', function() {\n    resetFieldErrors(this);\n  }, {passive: true});\n\n  contactName.addEventListener('blur', function() {\n    checkField(contactName, 'name');\n  }, {passive: true});\n  contactEmail.addEventListener('blur', function() {\n    checkField(contactEmail, 'email');\n  }, {passive: true});\n  contactMessage.addEventListener('blur', function() {\n    checkField(contactMessage, 'text');\n  }, {passive: true});\n})();\n\n// Check all fields before submitting and assign a mailto action to the form\n\nconst checkAllContactFields = () => {\n  contactFields.forEach(field => checkEmptyInput(field));\n\n  checkCheckbox(contactPrivacyCheckbox);\n  checkField(contactName, 'name');\n  checkField(contactEmail, 'email');\n  checkField(contactMessage, 'text');\n\n  for (let i = 0; i < contactFields.length; i++) {\n    if (contactFields[i].classList.contains('input--error')) {\n      if (!isMobileDevice) contactFields[i].focus();\n\n      event.preventDefault();\n      return;\n    }\n  }\n\n  if (!contactPrivacyCheckbox.checked) {\n    if (!isMobileDevice) contactPrivacyCheckbox.focus();\n    event.preventDefault();\n  }\n};\n\n(function() {\n  contactForm.addEventListener('submit', checkAllContactFields, {passive: false});\n})();\n\n// Manage keydown for name and email input fields\n\n(function() {\n  contactName.addEventListener('keydown', function() {\n    manageKeydown('name');\n  }, {passive: false});\n  contactEmail.addEventListener('keydown', function() {\n    manageKeydown('email');\n  }, {passive: false});\n})();\n\n// Add style to focused checkbox container\n\nconst checkboxInputs = document.querySelectorAll('.checkbox-input');\n\ncheckboxInputs.forEach(input => {\n  let checkboxContainer = input.parentElement;\n\n  input.addEventListener('focus', function() {\n    checkboxContainer.classList.add('checkbox-container--focused');\n  }, {passive: true});\n  input.addEventListener('blur', function() {\n    checkboxContainer.classList.remove('checkbox-container--focused');\n  }, {passive: true});\n});\n","import {isContainerOpened, setBodyOverflowY, setElemShown} from './common.js';\nimport {contactFields, contactPrivacyCheckbox, resetFieldErrors} from './contact-form.js';\n\n/* Control of modal window occurrence */\n\nconst contactButtons = document.querySelectorAll('.contact-button');\nconst modalContainer = document.querySelector('.body-container__modal-container');\nconst modalWindow = document.querySelector('.modal-container__modal-window');\nconst modalBackExitButton = document.querySelector('.modal-container__back-close-button');\nconst modalSvgExitButton = document.querySelector('.modal-window__svg-button');\nconst modalExitButtons = [modalBackExitButton, modalSvgExitButton];\n\nconst blockBeforeModal = document.querySelector('.block--before-modal');\nconst blockAfterModal = document.querySelector('.block--after-modal');\n\nconst bodyChildrenArr = document.body.children;\n\n// Common vars\n\nlet activeBeforeModalOpenedElem;\n\n// Common functions\n\nconst setBodyAriaHidden = isPermitted => {\n  for (let i = 0; i < bodyChildrenArr.length - 1; i++) {\n    bodyChildrenArr[i].setAttribute('aria-hidden', isPermitted);\n  }\n};\n\nconst setAriaToOpenModalButton = (button, isItsModalOpened) => {\n  button.setAttribute('aria-pressed', isItsModalOpened);\n  button.setAttribute('aria-expanded', isItsModalOpened);\n};\n\nconst closeModalWindow = () => {\n  setElemShown(modalContainer, false);\n  setBodyAriaHidden(false);\n  setBodyOverflowY(true);\n\n  contactFields.forEach(field => resetFieldErrors(field));\n  resetFieldErrors(contactPrivacyCheckbox);\n\n  setAriaToOpenModalButton(activeBeforeModalOpenedElem, false);\n  activeBeforeModalOpenedElem.focus();\n  activeBeforeModalOpenedElem = null;\n};\n\n// Add events to modal interactive elements\n\n(function() {\n  contactButtons.forEach(button => {\n    button.addEventListener('click', function() {\n      setBodyOverflowY(false);\n      setElemShown(modalContainer, true);\n      setBodyAriaHidden(true);\n\n      activeBeforeModalOpenedElem = document.activeElement;\n      setAriaToOpenModalButton(activeBeforeModalOpenedElem, true);\n\n      setTimeout(() => {\n        modalWindow.focus();\n      }, 300);\n\n    }, {passive: true});\n  });\n\n  modalExitButtons.forEach(button => {\n    button.addEventListener('click', function() {\n      closeModalWindow();\n    }, {passive: true});\n  });\n\n  // To focus on the last tabbable element of the modal window, when go from first one\n  blockBeforeModal.addEventListener('focus', function() { //not tabbable\n    if (!isContainerOpened(modalContainer)) return;\n\n    event.preventDefault();\n    modalBackExitButton.focus();\n\n  }, {passive: false, capture: true});\n\n  // To focus on the first tabbable element of the modal window, when go from last one\n  blockAfterModal.addEventListener('focus', function() {\n    if (!isContainerOpened(modalContainer)) return;\n\n    event.preventDefault();\n    modalWindow.focus();\n\n  }, {passive: false, capture: true});\n\n})();\n\n// A workaround for the case:\n// While resizing with opened modal window, overflowY of the body sometimes returns to 'auto', when it's not necessary.\n\nwindow.addEventListener('resize', function() {\n  if (!isContainerOpened(modalContainer)) return;\n\n  if (document.body.style.overflowY === 'auto') setBodyOverflowY(false);\n}, {passive: true});\n"],"names":["isContainerOpened","elem","classList","contains","setBodyOverflowY","isPermitted","document","body","style","overflowY","isMobileDevice","window","matchMedia","matches","setElemShown","remove","add","setAttribute","manageKeydown","inputTypeStr","regExpLetters","event","key","match","code","preventDefault","contactForm","forms","contactName","name","contactEmail","email","contactMessage","message","contactMessageLengthInfoP","querySelector","contactPrivacyCheckbox","submit","privacyAgreement","contactFields","getErrorInfoElem","field","parentElement","lastElementChild","assignMessageLength","textField","innerHTML","concat","value","length","getAttribute","addEventListener","this","passive","addErrorInfoBlock","pElem","createElement","id","append","forEach","assignErrorMessage","errorStatus","errorInfoElem","errorText","resetFieldErrors","removeAttribute","checkField","type","trim","inputValue","regExpPrecept","test","isValid","checkAllContactFields","checkEmptyInput","checked","i","focus","querySelectorAll","input","checkboxContainer","activeBeforeModalOpenedElem","contactButtons","modalContainer","modalWindow","modalBackExitButton","modalSvgExitButton","modalExitButtons","blockBeforeModal","blockAfterModal","bodyChildrenArr","children","setBodyAriaHidden","setAriaToOpenModalButton","button","isItsModalOpened","activeElement","setTimeout","capture"],"sourceRoot":""}